name: Update Firestore on JSON changes

on:
  push:
    paths:
      - 'suuji/**/*.md'
    branches:
      - main
  workflow_dispatch:

jobs:
  update-firestore:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v5
      with:
        fetch-depth: 0
    
    - name: Get changed Markdown files
      id: changed-files
      run: |
        if [ "${{ github.event_name }}" = "push" ]; then
          CHANGED_FILES=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep '\.md$' | grep '^suuji/')
        else
          CHANGED_FILES=$(find suuji -name "*.md" -type f)
        fi
        
        echo "files=$CHANGED_FILES" >> $GITHUB_OUTPUT
        echo "Changed Markdown files:"
        echo "$CHANGED_FILES"
    
    - name: Process Markdown files and update Firestore
      if: steps.changed-files.outputs.files != ''
      run: |
        echo "${{ steps.changed-files.outputs.files }}" | while read -r file; do
          if [ -n "$file" ] && [ -f "$file" ]; then
            echo "Processing file: $file"
            
            # ファイル名からKEYを取得（例: suuji/0-999/0-99/2.md -> 2）
            KEY=$(basename "$file" .md)
            
            # Markdownファイルから内容を読み取り（# 概要 も含める）
            # 改行を\\nに変換してFirestoreで正しく表示されるようにする
            DESCRIPTION=$(cat "$file" | sed 's/^[[:space:]]*//;s/[[:space:]]*$//' | sed ':a;N;$!ba;s/\n/\\n/g')
            
            if [ -n "$KEY" ]; then
              echo "Processing key: $KEY with description: $DESCRIPTION"
              
              # jqを使って適切にJSONを構築
              JSON_PAYLOAD=$(jq -n --arg key "$KEY" --arg description "$DESCRIPTION" '{key: ($key | tonumber), description: $description}')
              
              # HandleNumber APIを呼び出し
              curl -X POST "${{ secrets.SUUJI_HANDLE_NUMBER_API_URL_DEV }}" \
                -H "Content-Type: application/json" \
                -d "$JSON_PAYLOAD" \
                --fail-with-body
              
              echo "Successfully processed key: $KEY"
            else
              echo "Warning: No key found in file $file"
            fi
          fi
        done
    
    - name: Summary
      run: |
        echo "## Summary" >> $GITHUB_STEP_SUMMARY
        echo "Processed Markdown files:" >> $GITHUB_STEP_SUMMARY
        echo "${{ steps.changed-files.outputs.files }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "All Markdown files have been processed and Firestore has been updated." >> $GITHUB_STEP_SUMMARY
